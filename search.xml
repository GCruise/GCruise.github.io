<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>通过Jhipster创建一个应用</title>
      <link href="/2018/12/31/chapter2-Jhipster/"/>
      <url>/2018/12/31/chapter2-Jhipster/</url>
      <content type="html"><![CDATA[<h2 id="通过Jhipster创建一个应用"><a href="#通过Jhipster创建一个应用" class="headerlink" title="通过Jhipster创建一个应用"></a>通过Jhipster创建一个应用</h2><p><strong>Jhipster</strong>是一个自动化创建应用的框架。通过简单的命令即可创建一个应用。<br>首先新建一个文件夹，如application，然后再此文件夹执行jhipster命令。此时会出现一系列问题。出现的问题如下，可根据你的应用使用的技术具体定制。</p><p>####生成应用的问题<br><strong>Q1、Which type of application would you like to create?(你想创建哪种类型的程序？)</strong></p><ul><li>Monolithic application (recommended for simple projects)（整体应用）</li><li>Microservice application(微服务service)</li><li>Microservice gateway(微服务忘光)</li><li>Jhipster UAA server (for microservice Oauth2 authentication)(基于OAuth的安全认证服务)</li></ul><p><strong>Q2、What is the base name of your application?（服务的名字）</strong><br><strong>Q3、As you are running in a microservice architecture, on which port would like server to run ? It should be unique to avoid port conflicts.（运行程序的端口）</strong><br><strong>Q4、What is your default Java package name?</strong><br><strong>Q5、Which service discovery server do you want to use?(使用哪种注册中心)</strong></p><ul><li>Jhipster Registry(uses Eureka, provides Spring Cloud Config support and monitoring dashboards)</li><li>Consul</li><li>No Service discovery</li></ul><p><strong>Q6、Which type of authentication would you like to use?（使用哪种认证方式）</strong></p><ul><li>JWT authentication (stateless, with a token)</li><li>Oauth 2.0/OIDC Authentication (stateful, works with Keyloak and Okta)</li><li>Authentication with Jhipster UAA server (the server must be generated separately)</li></ul><p><strong>Q7、Which type of databases would you like to use?</strong></p><ul><li>SQL(H2, Mysql, MariaDB, PostgreSQL, Oracle, MSSQL)</li><li>MongoDB</li><li>Couchbase</li></ul><p><strong>Q8、Do you want to use the Spring cache abstraction?(是否使用Spring Cache)</strong></p><ul><li>Yes, with the Ehcache implement (local cache ,for a single node)</li><li>Yes, with the Hazelcast implementation (distributed cache, for multiple nodes)</li><li>[BETA] Yes, with the Infinispan implementation (hybrid cache, for mutiple nodes)</li><li>Yes, with Memcached (distributed cache) - warning when using an SQL databases, this will disable the Hibernate 2nd level cache!</li><li>No - Warning, when using an SQL databases, this will disable the Hibernate 2nd level cache!</li></ul><p><strong>Q9、Would you like to ues Maven or Gradle for building the backend?</strong></p><ul><li>Maven</li><li>Gradle</li></ul><p><strong>Q10、Which other technologies would you like to use?</strong></p><ul><li>Search engine using Elasticsearch</li><li>Asynchronous messages using Apache Kafka</li><li>API first development using OpenAPI-genetator</li></ul><p><strong>Q11、Would you like to enable internationalization support?</strong><br><strong>Q12、Please choose the native language of the application?</strong><br><strong>Q13、Please choose additional languages to install?</strong><br><strong>Q14、Besides Junit and Jest, which testing frameworks would you like to use?</strong><br>回答了以上问题，即可根据自己的需求生成一个application。</p><p>####Jhipster命令行选项</p><ul><li>–help </li><li>–skip-cache     #忘记记住的答案</li><li>–skip-install    #不自动安装依赖</li><li>–from-cli         #表明是Jhipster CLI命令</li><li>–skip-client     #跳过客户端生成，只生成后台服务。可使用Jhipster server替代</li><li>–skip-server    #跳过服务端生成，只生成客户端服务。可使用Jhipster clint替代</li><li>–skip-git         #不自动生成git项目</li><li>–skip-commit-hook  #不增加husky功能</li><li>–skip-user-management #跳过生成用户管理，包括前端后后端</li><li>–skip-check-length-of-identifier #跳过检验identifier的长度，目前oracle只支持30字符</li><li>–with-entities #如果已经生成了实体则再生成一次</li><li>–skip-checks #检查需要工具的状态</li><li>–jhi-prefix #添加服务、组件或路由的前缀，默认jhi</li><li>–yarn #使用yarn取代npm</li><li>–auth #当跳过服务端代码生成指定认证类型</li><li>–db #当跳过服务端代码生成时指定数据库</li><li>–uaa-base-name #当使用uaa认证和跳过服务端代码生成时指定UAA服务</li><li>–build #当跳过服务端代码生成时指定构建工具</li><li>–websocket #当跳过服务端代码生成时指定websocket选项</li><li>–search-engine #当跳过服务端代码生成时指定搜索引擎</li><li>–blueprint #</li><li>–experimental #使用实验特性</li></ul><p>####创建实体<br>Jhipster官方提供了几种方式创建实体。这里建议采用<strong>JDL Stdio</strong>的方式，使用指定的JDL语言创建实体和关系。JDL Stdio官网 <a href="https://start.jhipster.tech/jdl-studio/" target="_blank" rel="noopener">https://start.jhipster.tech/jdl-studio/</a> 通过此网站可生成实体及实体的对应关系，完成后得到.jh文件。此时便可使用import-jdl子生成器从.jh文件生成实体 jhipster import-jdl yourjdl.jh .<br><strong>JDL支持的字段类型</strong><br>不同的数据库所支持的字段类型有所不同，对应如下：<br>common databases:<br>PostgreSQL、MySQL、MariaDB、Oracle、MsSQL、MongoDB、Couchbase<br>common databases</p><ul><li>String</li><li>Integer</li><li>Long</li><li>BigDecimal</li><li>Float</li><li>Double</li><li>Enum</li><li>Boolean</li><li>LocalDate</li><li>Date</li><li>ZonedDateTime</li><li>UUID</li><li>Blob</li><li>AnyBlob</li><li>ImageBlob</li><li>TextBlob</li><li>Instant</li></ul>]]></content>
      
      <categories>
          
          <category> Jhipster </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> angular </tag>
            
            <tag> Jhipster </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>再次入坑Jhipster---初始Jhipster</title>
      <link href="/2018/12/23/chapter1--Jhipster/"/>
      <url>/2018/12/23/chapter1--Jhipster/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如果英文水平好的话，请忽略这篇文章，直接生撸Jhipster官网网站<a href="https://www.jhipster.tech/" target="_blank" rel="noopener">https://www.jhipster.tech/</a> ，官网上对Jhipster的介绍比较全面，基本上涵盖了Jhipster的基本介绍和使用的基本方法，如果想了解更多东西的话，还是建议去基佬网站吧<a href="https://github.com/jhipster/generator-jhipster" target="_blank" rel="noopener">https://github.com/jhipster/generator-jhipster</a> ，还可以和开发好好交流。废话不多说，接下来开始正式介绍Jhipster。</p><h2 id="1、Jhipster简介"><a href="#1、Jhipster简介" class="headerlink" title="1、Jhipster简介"></a>1、Jhipster简介</h2><p>Jhipster是一个用于生成，开发和部署应用程序和Spring微服务的开发平台，采用Spring Boot+Angular/React的方式，Jhipster旨在通过Spring boot在服务端打造一个高性能、强大的Java系统，通过Angular、React和Bootstrap打造一个有序的、时髦的、移动优先的前端，通过 Jhipster Registry、Netflix OSS、ELK stack和Docker打造一个强大的微服务架构，通过Yeoman、Webpack和Maven/Gradle打造一个实用的工作流去构建你的程序。</p><h2 id="2、可选择的组件"><a href="#2、可选择的组件" class="headerlink" title="2、可选择的组件"></a>2、可选择的组件</h2><h3 id="2-1、前端"><a href="#2-1、前端" class="headerlink" title="2.1、前端"></a>2.1、前端</h3><p>前端主要使用Angular/React框架，Jhipster主要支持以下框架：<br><img src="/img/chapter1--Jhipster1.png" alt="前端框架"></p><h3 id="2-2、后台"><a href="#2-2、后台" class="headerlink" title="2.2、后台"></a>2.2、后台</h3><p>后台采用Spring boot框架，<br><img src="/img/chapter1--Jhipster2.png" alt="后台框架"></p><p>Jhipster提供了以上组件供用户选择，用户可以根据自己系统的需要选择相应的组件开发自己的系统。</p><h2 id="3、Jhipster的用法"><a href="#3、Jhipster的用法" class="headerlink" title="3、Jhipster的用法"></a>3、Jhipster的用法</h2><p>Jhipster之所以在国外很受欢迎，主要是因为它为使用者提供了一个快速生成代码的平台，通过简单的命令行操作，可以快速生成一个程序框架。通过JDL可以快速生成实体，并实现实体增删查改接口，使用者只需根据具体的功能区修改代码就好，大大提高了开发的效率。<br>要使用Jhipster生成程序，首先就要准备Jhipster的开发环境，主要包括以下几个东西：jdk8、node.js、yeoman、bower、gulp、Jhipster。安装步骤如下所示：<br>1、安装jdk8<br>2、安装node.js<br>3、通过npm命令安装yeoman、bower、gulp<br>      npm install -g yo bower gulp-li<br>4、通过npm命令安装jhipster<br>      npm install -g generator-jhipster<br>注：npm安装速度可能会比较慢，可自行安装淘宝镜像cnpm<br>基本的环境安装完成以后，就可以通过yo命令来直接生成jhipster程序。</p><hr><p>感谢阅读这篇文章。下章介绍：详细讲解jhipster程序如何生成</p>]]></content>
      
      <categories>
          
          <category> Jhipster </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> angular </tag>
            
            <tag> Jhipster </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/08/07/hello-world/"/>
      <url>/2018/08/07/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
